getcwd()
getwd()
?setwd()
setwd(paste(getwd(), "/Hopkins_R"))
?paste
setwd(paste(getwd(), "/Hopkins_R", sep = ""))
setwd(paste(getwd(), "//Hopkins_R", sep = ""))
newdir <- paste(getwd(), "Hopkins_R", sep="")
newdir <- paste(getwd(), "/Hopkins_R", sep="")
?mkdir
if (file.exists(newdir)) {}
if (file.exists(newdir)) { setwd(newdir)}
dir.create(newdir)
if (file.exists(newdir)) { setwd(newdir)}
getwd()
dir()
ls()
source("myfunction.r")
myfunction()
dir()
clear(newdir)
edit "myfunction.r"
source("mycode.R")
mynoise(x)
x = myfunction()
mynoise(x)
x
x
x
x <- mynoise(x)
x
library("codetools", lib.loc="C:/Program Files/R/R-2.15.2/library")
rm newdir
?rm
rm(newdir)
rm(x)
?dir
list.files(path=".", pattern="*.R")
list.files(path=".", pattern="*.r")
X <- 104L
X <- X+1
X
class(R)
class(X)
x = 104L
x <- x + 1L
class(x)
length(x)
x[2]
x[1]
msg <- "hey, there!"
class(msg)
length(msg)
size(msg)
x <- 1:20
x
x <- 1:3:20
x <- 1:20:3
my_list <- c(3, 4.5, 7)
my_list
class(my_list)
length(my_list)
y <- c(1.7, "a")
class(y)
as.numeric(y)
x <- factor(c("high", "low", "low", "high"))
class(x)
unclass(x)
x <- factor(c("high", "low", "low", "high"), levels=(c("low", "high")))
unclass(x)
is.na(x[3])
is.na(x[7])
is.nan(x[7])
is.nan(x[2])
is.na(x)
is.nan(x)
insert(x[3], NA)
x <- list(c(1, 2, 3, 4, 5), c("a", "b"))
x
x[2]
x[1][3]
x[1,3]
unclass(x)
nrow(x)
ncol(x)
ncol(as.dataframe(x))
class(x)
class(x[1])
a <- list("This is item one", c(1, 3, 5), 1:16, list(1:2, c("c", "a", "t"), 4:20))
a[1]
a[2]
a[2][1]
a[2][2]
a[2][1][2]
a[2][1,2]
a[2][1[2]]
class(a[2])
class[a[1]]
class(a[1])
class(a)
a[2][1$2]
x <- names("String", "Odds", "sequence", "list")
x <- names(c("String", "Odds", "sequence", "list")
)
summary(a)
a
a[2][2]
a[2,2]
size(a)
sizeof(a)
dims(a)
dim(a)
summary(a)
a.names()
names(a)
rm(a)
?rm
list <- ls()
list
rm(list <- ls())
rm(x)
rm(X)
rm(list)
rm(msg)
rm(y)
rm(my_list)
x <- matrix(1:6, 2, 3)
x[1]
x[1,2]
x
x[, 2]
x[2, ]
x[1,2]
x[1,2, drop=FALSE]
x[1, , drop=FALSE]
x <- list(foo = 1:4, bar = 0.6)
x[1]
x[[1]]
x["bar"]
x[["bar"]]
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c("foo", "baz")]
memory
mem
help("memory")
??memory
base::Memory
?sapply
getwd()
memory.size
memory.size()
memory.limit()
ver()
version()
memory.size( max = NA)
memory.size( max = TRUE)
memory.size( max = FALSE)
y <- data.frame(a = 1, b = "a")
dput(y)
dput(y, file = "y.txt")
rm(y)
y <- dget("y.txt")
y
x <- readLines("y.txt")
x
class(x)
hw1 <- read.csv("rprog_data_quiz1_data/hw1_data.csv")
summary(hw1)
length(hw1)
class(hw1)
x <- c(4, "a", TRUE)
class(x)
x
x <- c(1,3,5)
y <- c(3,2,10)
x
y
cbind(x, y)
foo <- cbind(x, y)
foo
class(foo)
foo[1, x]
foo[1, ]
mapply(foo, class)
sapply(foo, class)
foo[3] <- "b"
sapply(foo, class)
foo <- rbind(x, y)
foo
j <- vector(1L, 2L, 3L)
?vector
j <- a+4i
j <- 3+4i
class(j)
x <- list(2, "a", "b", TRUE)
class(x)
sapply(x, class)
class(x[[2]])
length(x[[2]])
class(x[2])
x[[2]]
x[2]
x <- 1:4
y <- 2
x+y
class(x+y)
class(as.vector(x+y))
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x > 10] <- 4
x
summary(hw1)
rm(hw1)
hw1 <- read.csv("rprog_data_quiz1_data/hw1_data.csv", nrows=2)
hw
hw1
hw1 <- read.csv("rprog_data_quiz1_data/hw1_data.csv")
length(hw1)
nrows(hw1)
length(hw1$Ozone)
tail(hw1, nrows = 2)
?tail
tail(hw1, n = 2)
hw1[47]
hw1[47,]
hw1
rm(hw1)
hw1 <- read.csv("rprog_data_quiz1_data/hw1_data.csv", header = FALSE)
summary(hw1)
hw1 <- read.csv("rprog_data_quiz1_data/hw1_data.csv")
?is.na
is.na(hw1$Ozone)
count(is.na(hw1$Ozone) = FALSE)
sum(is.na(hw1$Ozone))
mean(hw1$Ozone)
mean(is.na(hw1$Ozone) = FALSE)
ozone <- hw1$Ozone
length(ozone)
ozone <- na.omit(hw1$Ozone)
length(ozone)
mean(na.omit(hw1$Ozone))
new_hw1 <- hw1[Ozone > 31]
new_hw1 <- hw1[[Ozone > 31]]
new_hw1 <- hw1[["Ozone" > 31]]
new_hw1
hw1
?attach
new_hw1 <- hw1[ which(hw1$Ozone > 31 & hw1$Temp > 90)]
sum(hw1[ which(hw1$Temp > 90)])
sum(hw1[ which(hw1$Temp > 90)],)
sum(hw1[ which(hw1$Temp > 90),])
sum(na.omit(hw1[ which(hw1$Temp > 90),])
)
new_hw1 <- hw1[ which(hw1$Ozone > 31 & hw1$Temp > 90),]
new_hw1
mean(new_hw1)
sapply(new_hw1, mean)
rm(new_hw1)
mean(hw1[which(hw1$Ozone > 31 & hw1$Temp > 90), 2])
mean(hw1[which(hw1$Month = 5), 1])
mean(hw1[which(hw1$Month == 5), 1])
mean(na.omit(hw1[which(hw1$Month == 5), 1]))
max(na.omit(hw1[which(hw1$Month == 5), 1]))
mean(na.omit(hw1[which(hw1$Month == 6), 4]))
R.version.string
